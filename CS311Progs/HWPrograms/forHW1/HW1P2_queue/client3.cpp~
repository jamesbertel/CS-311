//CS311 Yoshii
//INSTRUCTION:
//Look for ** to complete this program 
//The string output should match my hw1queueDemo.out 

//=========================================================
//HW#: HW1P2 queue application (generate all strings)
//Your name: James Bertel
//Complier:  g++ compiler
//File type: client program client2.cpp
//===========================================================

using namespace std;
#include <iostream>
#include <stdlib.h>
#include <string>
#include "queue.h"

//Purpose of the program: Generates all strings using A, B, and C as the letters
//Algorithm: Uses a queue, as well as string functions
int main()
{ 
  queue stringqueue;
  string first; //front of the first temporary queue
  string insert; //what the user wants to add to the queue
  string temp; //amendment to "insert"

  // ** "A", "B", "C" in the queue
  stringqueue.add("A");
  stringqueue.add("B");
  stringqueue.add("C");

  //**** Check and see if redundant?
  queue tempqueue1 = stringqueue;
  queue tempqueue2 = stringqueue;

  // ** while loop -- indefinitely
  while(stringqueue.getSize() < MAX_SIZE)
    {
      try
	{ 
	  tempqueue1.frontElem(first);
	  
	  for(int j = 0; j < tempqueue2.getSize(); j++)
	    {
	      insert = first;  
	      tempqueue2.frontElem(temp);
	      insert += temp;
	      
	      stringqueue.add(insert);
	      tempqueue1.add(insert);
	      tempqueue2.goToBack();
	    }
	  tempqueue1.remove(first);
	}

      //catches      
      catch (queue::Overflow)
	{ stringqueue.displayAll();
	  cerr << "Overflow. Too many strings.\n"; exit(1);}
      catch (queue::Underflow)
	{ cerr << "Underflow. Too few strings.\n"; exit(1);}
      catch(string const* errormsg)
	{ cerr << errormsg; exit(1);}

    }// end of while loop
}

